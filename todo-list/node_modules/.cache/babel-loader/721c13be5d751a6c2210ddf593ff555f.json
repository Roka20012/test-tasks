{"ast":null,"code":"export const itemHasErrored = bool => ({\n  type: \"ITEMS_HAS_ERRORED\",\n  hasErrored: bool\n});\nexport const itemsIsLoading = bool => ({\n  type: \"ITEMS_IS_LOADING\",\n  isLoading: bool\n});\nexport const itemsFetchDataSuccess = items => ({\n  type: \"ITEMS_FETCH_DATA_SUCCESS\",\n  items\n});\nexport function errorAfterFiveSeconds() {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(itemHasErrored(true));\n    }, 5000);\n  };\n}\nexport function itemsFetchData(url) {\n  return dispatch => {\n    dispatch(itemsIsLoading(true));\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n\n      dispatch(itemsIsLoading(false));\n      return response;\n    }).then(response => response.json()).then(items => dispatch(itemsFetchDataSuccess(items))).catch(() => dispatch(itemHasErrored(true)));\n  };\n}","map":{"version":3,"sources":["/home/rostyk/Documents/test-tasks/real-state/src/actions/items.js"],"names":["itemHasErrored","bool","type","hasErrored","itemsIsLoading","isLoading","itemsFetchDataSuccess","items","errorAfterFiveSeconds","dispatch","setTimeout","itemsFetchData","url","fetch","then","response","ok","Error","statusText","json","catch"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAGC,IAAI,KAAK;AACnCC,EAAAA,IAAI,EAAE,mBAD6B;AAEnCC,EAAAA,UAAU,EAAEF;AAFuB,CAAL,CAA3B;AAKP,OAAO,MAAMG,cAAc,GAAGH,IAAI,KAAK;AACnCC,EAAAA,IAAI,EAAE,kBAD6B;AAEnCG,EAAAA,SAAS,EAAEJ;AAFwB,CAAL,CAA3B;AAKP,OAAO,MAAMK,qBAAqB,GAAGC,KAAK,KAAK;AAC3CL,EAAAA,IAAI,EAAE,0BADqC;AAE3CK,EAAAA;AAF2C,CAAL,CAAnC;AAKP,OAAO,SAASC,qBAAT,GAAiC;AACpC,SAAOC,QAAQ,IAAI;AACfC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,QAAQ,CAACT,cAAc,CAAC,IAAD,CAAf,CAAR;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJD;AAKH;AAED,OAAO,SAASW,cAAT,CAAwBC,GAAxB,EAA6B;AAChC,SAAOH,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACL,cAAc,CAAC,IAAD,CAAf,CAAR;AAEAS,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,cAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AAEDT,MAAAA,QAAQ,CAACL,cAAc,CAAC,KAAD,CAAf,CAAR;AAEA,aAAOW,QAAP;AACH,KATL,EAUKD,IAVL,CAUUC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EAVtB,EAWKL,IAXL,CAWUP,KAAK,IAAIE,QAAQ,CAACH,qBAAqB,CAACC,KAAD,CAAtB,CAX3B,EAYKa,KAZL,CAYW,MAAMX,QAAQ,CAACT,cAAc,CAAC,IAAD,CAAf,CAZzB;AAaH,GAhBD;AAiBH","sourcesContent":["export const itemHasErrored = bool => ({\n    type: \"ITEMS_HAS_ERRORED\",\n    hasErrored: bool\n});\n\nexport const itemsIsLoading = bool => ({\n    type: \"ITEMS_IS_LOADING\",\n    isLoading: bool\n});\n\nexport const itemsFetchDataSuccess = items => ({\n    type: \"ITEMS_FETCH_DATA_SUCCESS\",\n    items\n});\n\nexport function errorAfterFiveSeconds() {\n    return dispatch => {\n        setTimeout(() => {\n            dispatch(itemHasErrored(true));\n        }, 5000);\n    };\n}\n\nexport function itemsFetchData(url) {\n    return dispatch => {\n        dispatch(itemsIsLoading(true));\n\n        fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n\n                dispatch(itemsIsLoading(false));\n\n                return response;\n            })\n            .then(response => response.json())\n            .then(items => dispatch(itemsFetchDataSuccess(items)))\n            .catch(() => dispatch(itemHasErrored(true)));\n    };\n}\n"]},"metadata":{},"sourceType":"module"}