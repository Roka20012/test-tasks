{"ast":null,"code":"var _jsxFileName = \"/home/rostyk/Documents/test-tasks/real-state/src/components/ItemList.js\";\nimport React, { Component } from \"react\";\n\nclass ItemList extends Component {\n  constructor() {\n    super();\n\n    this.fetchData = url => {\n      this.setState({\n        isLoading: true\n      });\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n\n        this.setState({\n          isLoading: false\n        });\n        return response;\n      }).then(response => response.json()).then(items => this.setState({\n        items\n      })).catch(() => this.setState({\n        hasErrored: true\n      }));\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData(\"http://586ed963900d612000138bd.mockapi.io/items\");\n  }\n\n  render() {\n    if (this.state.hasErrored) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Sorry! There was an error loading the items\");\n    }\n\n    if (this.state.isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, this.state.items.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, item.label)));\n  }\n\n}\n\nexport default ItemList;","map":{"version":3,"sources":["/home/rostyk/Documents/test-tasks/real-state/src/components/ItemList.js"],"names":["React","Component","ItemList","constructor","fetchData","url","setState","isLoading","fetch","then","response","ok","Error","statusText","json","items","catch","hasErrored","state","componentDidMount","render","map","item","id","label"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,QAAN,SAAuBD,SAAvB,CAAiC;AAC7BE,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,SAPc,GAOFC,GAAG,IAAI;AACf,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AAEAC,MAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,QAAQ,IAAI;AACd,YAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AACd,gBAAMC,KAAK,CAACF,QAAQ,CAACG,UAAV,CAAX;AACH;;AAED,aAAKP,QAAL,CAAc;AAAEC,UAAAA,SAAS,EAAE;AAAb,SAAd;AACA,eAAOG,QAAP;AACH,OARL,EASKD,IATL,CASUC,QAAQ,IAAIA,QAAQ,CAACI,IAAT,EATtB,EAUKL,IAVL,CAUUM,KAAK,IAAI,KAAKT,QAAL,CAAc;AAAES,QAAAA;AAAF,OAAd,CAVnB,EAWKC,KAXL,CAWW,MAAM,KAAKV,QAAL,CAAc;AAAEW,QAAAA,UAAU,EAAE;AAAd,OAAd,CAXjB;AAYH,KAtBa;;AAEV,SAAKC,KAAL,GAAa;AACTH,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAmBDI,EAAAA,iBAAiB,GAAG;AAChB,SAAKf,SAAL,CAAe,iDAAf;AACH;;AAEDgB,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKF,KAAL,CAAWD,UAAf,EAA2B;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACH;;AAED,QAAI,KAAKC,KAAL,CAAWX,SAAf,EAA0B;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKW,KAAL,CAAWH,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,IACtB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,KAAxB,CADH,CADL,CADJ;AAOH;;AA5C4B;;AA+CjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass ItemList extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: []\n        };\n    }\n\n    fetchData = url => {\n        this.setState({ isLoading: true });\n\n        fetch(url)\n            .then(response => {\n                if (!response.ok) {\n                    throw Error(response.statusText);\n                }\n\n                this.setState({ isLoading: false });\n                return response;\n            })\n            .then(response => response.json())\n            .then(items => this.setState({ items }))\n            .catch(() => this.setState({ hasErrored: true }));\n    };\n\n    componentDidMount() {\n        this.fetchData(\"http://586ed963900d612000138bd.mockapi.io/items\");\n    }\n\n    render() {\n        if (this.state.hasErrored) {\n            return <p>Sorry! There was an error loading the items</p>;\n        }\n\n        if (this.state.isLoading) {\n            return <p>Loading...</p>;\n        }\n        return (\n            <ul>\n                {this.state.items.map(item => (\n                    <li key={item.id}>{item.label}</li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nexport default ItemList;\n"]},"metadata":{},"sourceType":"module"}