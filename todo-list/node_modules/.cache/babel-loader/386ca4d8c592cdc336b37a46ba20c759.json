{"ast":null,"code":"var _jsxFileName = \"/home/rostyk/Documents/test-tasks/real-state/src/components/ItemList.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemsFetchData } from \"../actions/items\";\n\nclass ItemList extends Component {\n  componentDidMount() {\n    this.props.fetchData(\"http://5826ed963900d612000138bd.mockapi.io/items\");\n  }\n\n  render() {\n    if (this.props.hasErrored) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Sorry! There was an error loading the items\");\n    }\n\n    if (this.props.isLoading) {\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Loading...\");\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, this.props.items.map(item => React.createElement(\"li\", {\n      key: item.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, item.label)));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  items: state.items,\n  hasErrored: state.itemsHasErrored,\n  isLoading: state.itemsIsLoading\n});\n\nconst mapDispatchToProps = state => ({\n  fetchData: url => dispatch(itemsFetchData(url))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ItemList);","map":{"version":3,"sources":["/home/rostyk/Documents/test-tasks/real-state/src/components/ItemList.js"],"names":["React","Component","connect","itemsFetchData","ItemList","componentDidMount","props","fetchData","render","hasErrored","isLoading","items","map","item","id","label","mapStateToProps","state","itemsHasErrored","itemsIsLoading","mapDispatchToProps","url","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAC7BI,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,SAAX,CACI,kDADJ;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKF,KAAL,CAAWG,UAAf,EAA2B;AACvB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACH;;AAED,QAAI,KAAKH,KAAL,CAAWI,SAAf,EAA0B;AACtB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACH;;AACD,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,IACtB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmBD,IAAI,CAACE,KAAxB,CADH,CADL,CADJ;AAOH;;AAtB4B;;AAyBjC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAC9BN,EAAAA,KAAK,EAAEM,KAAK,CAACN,KADiB;AAE9BF,EAAAA,UAAU,EAAEQ,KAAK,CAACC,eAFY;AAG9BR,EAAAA,SAAS,EAAEO,KAAK,CAACE;AAHa,CAAL,CAA7B;;AAMA,MAAMC,kBAAkB,GAAGH,KAAK,KAAK;AACjCV,EAAAA,SAAS,EAAEc,GAAG,IAAIC,QAAQ,CAACnB,cAAc,CAACkB,GAAD,CAAf;AADO,CAAL,CAAhC;;AAIA,eAAenB,OAAO,CAClBc,eADkB,EAElBI,kBAFkB,CAAP,CAGbhB,QAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { itemsFetchData } from \"../actions/items\";\n\nclass ItemList extends Component {\n    componentDidMount() {\n        this.props.fetchData(\n            \"http://5826ed963900d612000138bd.mockapi.io/items\"\n        );\n    }\n\n    render() {\n        if (this.props.hasErrored) {\n            return <p>Sorry! There was an error loading the items</p>;\n        }\n\n        if (this.props.isLoading) {\n            return <p>Loading...</p>;\n        }\n        return (\n            <ul>\n                {this.props.items.map(item => (\n                    <li key={item.id}>{item.label}</li>\n                ))}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    items: state.items,\n    hasErrored: state.itemsHasErrored,\n    isLoading: state.itemsIsLoading\n});\n\nconst mapDispatchToProps = state => ({\n    fetchData: url => dispatch(itemsFetchData(url))\n});\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ItemList);\n"]},"metadata":{},"sourceType":"module"}